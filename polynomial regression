import port numpy as np
import matplotlib.pyplot as plt
 
from sklearn.linear_model import LinearRegression
from sklearn.preprocessing import PolynomialFeatures
 
# Training set
x_train = [[0.5], [1], [2], [5], [10]] # Quantity of coffee
y_train = [[2], [4], [8], [17], [22]] #prices of coffee
 
# Testing set
x_test = [[3], [4], [8], [10]] # quantity of coffee
y_test = [[9], [16], [20], [22]] # prices of coffee
 
# Train the Linear Regression model and plot a prediction
regressor = LinearRegression()
regressor.fit(x_train, y_train)
xx = np.linspace(0, 26, 100)
yy = regressor.predict(xx.reshape(xx.shape[0], 1))
plt.plot(xx, yy)
 
# Set the degree of the Polynomial Regression model
quadratic_featurizer = PolynomialFeatures(degree=2)
 
# This preprocessor transforms an input data matrix into a new data matrix of a given degree
X_train_quadratic = quadratic_featurizer.fit_transform(x_train)
X_test_quadratic = quadratic_featurizer.transform(x_test)
 
# Train and test the regressor_quadratic model
regressor_quadratic = LinearRegression()
regressor_quadratic.fit(X_train_quadratic, y_train)
xx_quadratic = quadratic_featurizer.transform(xx.reshape(xx.shape[0], 1))
 
# Plot the graph
plt.plot(xx, regressor_quadratic.predict(xx_quadratic), c='r', linestyle='--')
plt.title('coffee price regressed on quantity')
plt.xlabel('quantity in kg')
plt.ylabel('Price in dollars')
plt.axis([0, 25, 0, 25])
plt.grid(True)
plt.scatter(x_train, y_train)
plt.show()
